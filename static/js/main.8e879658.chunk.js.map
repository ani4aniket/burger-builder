{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","hoc/Layout/Layout.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","sideDrawerToggleHandler","prevState","state","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchaseable","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e879658.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"_16czhM3SJjm0N-dLAavfix\",\"BreadTop\":\"_1F9cDh5mfiR8BvKxKnGMeh\",\"Seeds1\":\"_1KqDNkmDd04k5rFdowEZGj\",\"Seeds2\":\"_1j0RgZwbJ6trcJooqPdtwH\",\"Meat\":\"_1kFCFMz2-iIPZAjvPt4MsC\",\"Cheese\":\"_3JVcnSJn7GorqF2q39ZuR2\",\"Salad\":\"_142r8ItvsnhGp1RSw-_Dbt\",\"Bacon\":\"_3LSemMccNpDOc-pbjPJs-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3pLYCt_XGv-qW86lAaB4Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","const aux = (props) => props.children;\n \nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css'\nconst logo = (props) => {\n    return ( \n        <div className={classes.Logo} style={{height: props.height}}>\n            <img src={burgerLogo} alt=\"MyBurger\" />\n        </div>\n     );\n}\n \nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css'\nconst navigationItem = (props) => {\n    return ( \n        <li className={classes.NavigationItem}>\n            <NavLink\n                exact={props.exact}\n                to={props.link}\n                activeClassName={classes.active}\n            >{props.children}</NavLink>\n        </li>\n     );\n}\n \nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\nconst navigationItems = () => {\n    return ( \n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\n        </ul>\n     );\n}\n \nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css'\n\nconst drawerToggle = (props) => {\n    return ( \n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n     );\n}\n \nexport default drawerToggle;","import React from 'react';\nimport Logo from '../../Logo/Logo';\n\nimport classes from './Toolbar.css'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => {\n    return ( \n        <header className={classes.Toolbar}>\n            <DrawerToggle clicked={props.drawerToggleClicked} />\n            <div className={classes.Logo}>\n                <Logo/>\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems/>\n            </nav>\n        </header>\n    );\n}\n \nexport default toolbar; ","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = (props )=> (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport classes from './SideDrawer.css';\n\nconst sideDrawer = (props) => {\n\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open];\n\n    }\n    return ( \n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(\" \")}>\n            <div className={classes.Logo}>\n                <Logo/>\n            </div>\n            <nav><NavigationItems/></nav>\n        </div>\n        </Aux>\n        \n     );\n}\n \nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nimport classes from './Layout.css';\nclass Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showSideDrawer: false\n         }\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({\n            showSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () =>{\n\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {  \n        return ( \n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n         );\n    }\n}\n \nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredients.css';\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n            switch(this.props.type) {\n                case ('bread-bottom'):\n                    ingredient = <div className={classes.BreadBottom}></div>;\n                    break;\n                case ('bread-top'):\n                    ingredient = (\n                        <div className={classes.BreadTop}>\n                            <div className={classes.Seeds1}></div>\n                            <div className={classes.Seeds2}></div>\n                        </div>\n                    );\n                    break;\n                case ('meat'):\n                    ingredient = <div className={classes.Meat}></div>;\n                    break;\n                case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>;\n                    break;\n                case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>;\n                    break;\n                case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>;\n                    break;\n                default:\n                    ingredient = null;\n            }\n\n            return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n \nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css'\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }    \n    return ( \n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n     );\n}\n \nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css'\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n)\n \nexport default buildControl;","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.css'\n\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)} \n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button \n            disabled={!props.purchaseable} \n            className={classes.OrderButton}\n            onClick={props.ordered}\n            >ORDER NOW</button>\n    </div>\n)\n \nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component{\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render(){\n        return ( \n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </Aux>\n         );\n    }\n    \n}\n \nexport default Modal;","import React from 'react';\nimport classes from './Button.css';\nconst button = (props) => {\n    return ( \n    <button disabled={props.disabled} className={[classes.Button, classes[props.btnType]].join(\" \")} onClick={props.clicked}>{props.children}</button>\n    );\n}\n \nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component{\n    \n    render(){\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(igKey => {\n            return( \n            <li key={igKey}>\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\n            </li>);\n        })\n        return ( \n            <Aux>\n                <h3>\n                    Your Order\n                </h3>\n                <p>A delicious burger with the following ingredients: </p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux> \n        );\n    }\n    \n    \n}\n \nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-the-burger-c00d5.firebaseio.com'\n})\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css'\nconst spinner = () => {\n    return ( \n        <div className={classes.Loader}>Loading...</div>\n     );\n}\n \nexport default spinner;","import React, {Component} from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component{\n        state = {\n            error: null\n        }\n\n        componentWillMount(){\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null})\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error}) \n            })\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({\n                error: null\n            })\n        }\n\n        render(){ \n            return (\n                <Aux>\n                    <Modal show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}\n                    >\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\nclass BurgerBuilder extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n\n    //     }\n    // }\n    \n    state = { \n        ingredients: null,\n        totalPrice: 4,\n        purchaseable: false,\n        purchasing: false,\n        loading: false,\n        error: null\n    }\n\n    componentDidMount(){\n        axios.get('/ingredients.json')\n            .then(response => {\n                this.setState({ingredients: response.data})\n            })\n            .catch(error => {\n                this.setState({error: true})\n            })\n    }\n\n    updatePurchaseState(ingredients){\n\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el\n            },0)\n        this.setState({\n            purchaseable: sum > 0\n        })\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        })\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        })\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n        })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({\n            purchasing: false\n        })\n    }\n\n    purchaseContinueHandler = () => {\n\n        const queryParams = [];\n        for(let i in this.state.ingredients){\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price='+this.state.totalPrice)\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        })\n    }\n    \n    render() { \n        const disabledInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        let orderSummary = null;\n\n        \n\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n        if(this.state.ingredients){\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls \n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemoved={this.removeIngredientHandler}\n                        disabled={disabledInfo}\n                        purchaseable={this.state.purchaseable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice}\n                    />\n                </Aux>\n            )\n            orderSummary = <OrderSummary ingredients={this.state.ingredients} purchaseCanceled={this.purchaseCancelHandler} purchaseContinued={this.purchaseContinueHandler} price={this.state.totalPrice} />\n        }\n        if(this.state.loading){\n            orderSummary = <Spinner />\n        }\n\n        return ( \n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n         );\n    }\n}\n \nexport default withErrorHandler(BurgerBuilder,axios);","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return ( \n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}\n                >CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}\n                >CONTINUE</Button>\n        </div>\n     );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType){\n        case ('input'):\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n            break;\n        case ('select'):\n            inputElement = (\n                <select \n                    className={inputClasses.join(' ')} \n                    value={props.value}\n                    onChange={props.changed}>\n                        {props.elementConfig.options.map(option => (\n                            <option key={option.value} value={option.value}>\n                                {option.displayValue}\n                            </option>\n                        ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} />\n    }\n    return ( \n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n     );\n}\n \nexport default input;","import React, { Component } from 'react';\nimport axios from '../../../axios-orders';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nimport classes from './ContactData.css'\nclass ContactData extends Component {\n    state = { \n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}   \n                    ]\n                },\n                value: '',\n                validation: {},\n                valid: true\n            },\n        },\n        loading: false,\n        formIsValid: false\n     }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: formData\n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false})\n                this.props.history.push('/')\n            })\n            .catch(error => {\n                this.setState({loading: false})\n            })\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) =>{\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        })\n\n    }\n\n    render() { \n        const formElementsArray = [];\n        for (let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                        />\n                ))}\n                \n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if(this.state.loading){\n            form = <Spinner/>\n        }\n        return ( \n            <div className={classes.ContactData}>\n                <h4>Enter your Contact data</h4>\n                {form}\n            </div>\n         );\n    }\n}\n \nexport default ContactData;","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    state = { \n        ingredients: null,\n        price: 0\n     }\n\n     componentWillMount(){\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let price = 0;\n        for(let param of query.entries()){\n            // ['salad', '1']\n            if(param[0] === 'price'){\n                price = param[1]\n            } else{\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState({ingredients: ingredients, totalPrice: price})\n     }\n\n     checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n     }\n\n     checkoutContinuedHandler = () => {\n         this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() { \n        return ( \n            <div>\n                <CheckoutSummary \n                    ingredients={this.state.ingredients} \n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler}\n                    />\n                <Route path={this.props.match.path + '/contact-data'} render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\n            </div> \n        );\n    }\n}\n \nexport default Checkout;","import React from 'react';\nimport classes from './Order.css'\nconst order = (props) =>{ \n    const ingredients = [];\n    for(let ingredientName in props.ingredients){\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px '\n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\nimport axios from '../../axios-orders'\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = { \n        orders: [],\n        loading: true\n     }\n\n    componentDidMount(){\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id:key\n                    })\n                }\n                this.setState({\n                    loading: false,\n                    orders: fetchedOrders\n                })\n            }).catch( err => {\n                this.setState({\n                    loading: false\n                })\n            })\n    }\n    \n    render() { \n        return ( \n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price}\n                    />\n                ))}\n                \n            </div> \n        );\n    }\n}\n \nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div> \n    \n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}