{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","hoc/Layout/Layout.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","sideDrawerToggleHandler","prevState","state","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchaseable","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFailed","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,YAAc,0BAA0B,SAAW,0BAA0B,OAAS,0BAA0B,OAAS,0BAA0B,KAAO,0BAA0B,OAAS,0BAA0B,MAAQ,0BAA0B,MAAQ,4B,oBCAnRD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,KAAO,0BAA0B,MAAQ,0BAA0B,KAAO,4B,kBCAnID,EAAOC,QAAU,CAAC,aAAe,0BAA0B,MAAQ,0BAA0B,KAAO,0BAA0B,KAAO,4B,gBCArID,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,aAAe,0BAA0B,QAAU,4B,kBCArID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,0BAA0B,YAAc,0B,kBCArGD,EAAOC,QAAU,CAAC,eAAiB,0BAA0B,OAAS,4B,kBCAtED,EAAOC,QAAU,CAAC,cAAgB,0BAA0B,YAAc,wBAAwB,OAAS,4B,gBCA3GD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,0BAA0B,OAAS,4B,4BCDhGD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,0B,iBCApCD,EAAOC,QAAU,CAAC,aAAe,4B,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,0B,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,4B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,MAAQ,4B,iBCA7DD,EAAOC,QAAU,CAAC,gBAAkB,4B,gBCApCD,EAAOC,QAAU,CAAC,YAAc,4B,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,2B,0OCCXC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,kCCWdC,EARF,SAACF,GACV,OACI,yBAAKG,UAAWC,IAAQC,KAAMC,MAAO,CAACC,OAAQP,EAAMO,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,e,mDCUvBC,EAZQ,SAACX,GACpB,OACI,wBAAIG,UAAWC,IAAQQ,gBACnB,kBAAC,IAAD,CACIC,MAAOb,EAAMa,MACbC,GAAId,EAAMe,KACVC,gBAAiBZ,IAAQa,QAC3BjB,EAAMC,YCCLiB,EATS,WACpB,OACI,wBAAIf,UAAWC,IAAQe,iBACnB,kBAAC,EAAD,CAAgBJ,KAAK,IAAIF,OAAK,GAA9B,kBACA,kBAAC,EAAD,CAAgBE,KAAK,WAArB,Y,iBCOGK,EAVM,SAACpB,GAClB,OACI,yBAAKG,UAAWC,IAAQiB,aAAcC,QAAStB,EAAMuB,SACjD,8BACA,8BACA,gCCYGC,EAdC,SAACxB,GACb,OACI,4BAAQG,UAAWC,IAAQqB,SACvB,kBAAC,EAAD,CAAcF,QAASvB,EAAM0B,sBAC7B,yBAAKvB,UAAWC,IAAQC,MACpB,kBAAC,EAAD,OAEJ,yBAAKF,UAAWC,IAAQuB,aACpB,kBAAC,EAAD,S,iBCRDC,EAJE,SAAC5B,GAAD,OACbA,EAAM6B,KAAO,yBAAK1B,UAAWC,IAAQ0B,SAAUR,QAAStB,EAAMuB,UAAkB,M,iBC0BrEQ,EArBI,SAAC/B,GAEhB,IAAIgC,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQ8B,OAKnD,OAJGlC,EAAMmC,OACLH,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQgC,OAI/C,kBAACC,EAAD,KACI,kBAAC,EAAD,CAAUR,KAAM7B,EAAMmC,KAAMZ,QAASvB,EAAMsC,SAC3C,yBAAKnC,UAAW6B,EAAgBO,KAAK,MACrC,yBAAKpC,UAAWC,IAAQC,MACpB,kBAAC,EAAD,OAEJ,6BAAK,kBAAC,EAAD,U,iBCkBFmC,E,YAjCX,WAAYxC,GAAQ,IAAD,8BACf,4CAAMA,KAMVyC,wBAA0B,WACtB,EAAKC,SAAS,CACVC,gBAAgB,KATL,EAanBC,wBAA0B,WAEtB,EAAKF,UAAS,SAACG,GACX,MAAO,CAACF,gBAAiBE,EAAUF,oBAdvC,EAAKG,MAAQ,CACTH,gBAAgB,GAHL,E,sEAqBf,OACI,kBAACN,EAAD,KACI,kBAAC,EAAD,CAASX,oBAAqBqB,KAAKH,0BACnC,kBAAC,EAAD,CAAYT,KAAMY,KAAKD,MAAMH,eAAgBL,OAAQS,KAAKN,0BAC1D,0BAAMtC,UAAWC,IAAQ4C,SACpBD,KAAK/C,MAAMC,e,GA3BXgD,a,kDCoCNC,E,iLArCP,IAAIC,EAAa,KACb,OAAOJ,KAAK/C,MAAMoD,MACd,IAAM,eACFD,EAAa,yBAAKhD,UAAWC,IAAQiD,cACrC,MACJ,IAAM,YACFF,EACI,yBAAKhD,UAAWC,IAAQkD,UACpB,yBAAKnD,UAAWC,IAAQmD,SACxB,yBAAKpD,UAAWC,IAAQoD,UAGhC,MACJ,IAAM,OACFL,EAAa,yBAAKhD,UAAWC,IAAQqD,OACrC,MACJ,IAAM,SACFN,EAAa,yBAAKhD,UAAWC,IAAQsD,SACrC,MACJ,IAAM,QACFP,EAAa,yBAAKhD,UAAWC,IAAQuD,QACrC,MACJ,IAAM,QACFR,EAAa,yBAAKhD,UAAWC,IAAQwD,QACrC,MACJ,QACIT,EAAa,KAGrB,OAAOA,M,GA/BYF,aCuBhBY,EAvBA,SAAC7D,GAEZ,IAAI8D,EAAyBC,OAAOC,KAAKhE,EAAMiE,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMpE,EAAMiE,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGlB,KAAMe,UAGtDK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAIP,OAHsC,IAAlCZ,EAAuBc,SACvBd,EAAyB,gEAGzB,yBAAK3D,UAAWC,IAAQyE,QACpB,kBAAC,EAAD,CAAkBzB,KAAK,cACtBU,EACD,kBAAC,EAAD,CAAkBV,KAAK,mB,iBCNpB0B,GAbM,SAAC9E,GAAD,OACjB,yBAAKG,UAAWC,IAAQ2E,cACpB,yBAAK5E,UAAWC,IAAQ4E,OAAQhF,EAAMiF,OACtC,4BACI9E,UAAWC,IAAQ8E,KACnB5D,QAAStB,EAAMmF,QACfC,SAAUpF,EAAMoF,UAHpB,QAIA,4BACIjF,UAAWC,IAAQiF,KACnB/D,QAAStB,EAAMsF,OAFnB,U,oBCLFC,GAAW,CACb,CAACN,MAAO,QAAS7B,KAAM,SACvB,CAAC6B,MAAO,QAAS7B,KAAM,SACvB,CAAC6B,MAAO,SAAU7B,KAAM,UACxB,CAAC6B,MAAO,OAAQ7B,KAAM,SAuBXoC,GApBO,SAACxF,GAAD,OAClB,yBAAKG,UAAWC,KAAQqF,eACpB,6CAAkB,gCAASzF,EAAM0F,MAAMC,QAAQ,KAC9CJ,GAASrB,KAAI,SAAA0B,GAAI,OACd,kBAAC,GAAD,CACIrB,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMtF,EAAM6F,gBAAgBD,EAAKxC,OACxC+B,QAAS,kBAAMnF,EAAM8F,kBAAkBF,EAAKxC,OAC5CgC,SAAUpF,EAAMoF,SAASQ,EAAKxC,WAGtC,4BACIgC,UAAWpF,EAAM+F,aACjB5F,UAAWC,KAAQ4F,YACnB1E,QAAStB,EAAMiG,SAHnB,e,oBCMOC,G,8LAvBWC,EAAWC,GAC7B,OAAOD,EAAUtE,OAASkB,KAAK/C,MAAM6B,MAAQsE,EAAUlG,WAAa8C,KAAK/C,MAAMC,W,+BAI/E,OACI,kBAACoC,EAAD,KACI,kBAAC,EAAD,CAAUR,KAAMkB,KAAK/C,MAAM6B,KAAMN,QAASwB,KAAK/C,MAAMqG,cACrD,yBACIlG,UAAWC,KAAQ8F,MACnB5F,MAAO,CACHgG,UAAWvD,KAAK/C,MAAM6B,KAAO,gBAAkB,qBAC/C0E,QAASxD,KAAK/C,MAAM6B,KAAO,IAAM,MAGpCkB,KAAK/C,MAAMC,e,GAjBZgD,a,oBCGLuD,GANA,SAACxG,GACZ,OACA,4BAAQoF,SAAUpF,EAAMoF,SAAUjF,UAAW,CAACC,KAAQqG,OAAQrG,KAAQJ,EAAM0G,UAAUnE,KAAK,KAAMjB,QAAStB,EAAMuB,SAAUvB,EAAMC,WC8BrH0G,G,iLA5BF,IAAD,OACEC,EAAoB7C,OAAOC,KAAKjB,KAAK/C,MAAMiE,aAC5CC,KAAI,SAAAC,GACL,OACA,wBAAII,IAAKJ,GACL,0BAAM7D,MAAO,CAACuG,cAAe,eAAgB1C,GADjD,KACiE,EAAKnE,MAAMiE,YAAYE,OAG5F,OACI,kBAAC9B,EAAD,KACI,0CAGA,kFACA,4BACKuE,GAEL,2BAAG,gDAAsB7D,KAAK/C,MAAM0F,MAAMC,QAAQ,KAClD,oDACA,kBAAC,GAAD,CAAQe,QAAQ,SAASnF,QAASwB,KAAK/C,MAAM8G,kBAA7C,UACA,kBAAC,GAAD,CAAQJ,QAAQ,UAAUnF,QAASwB,KAAK/C,MAAM+G,mBAA9C,iB,GAtBW9D,a,oBCIZ+D,GANC,WACZ,OACI,yBAAK7G,UAAWC,KAAQ6G,QAAxB,eC2COC,GA1CU,SAACC,EAAkBC,GACxC,kNACItE,MAAQ,CACJuE,MAAO,MAFf,EAoBIC,sBAAwB,WACpB,EAAK5E,SAAS,CACV2E,MAAO,QAtBnB,oFAKyB,IAAD,OAChBtE,KAAKwE,eAAiBH,EAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKjF,SAAS,CAAC2E,MAAO,OACfM,KAEX5E,KAAK6E,eAAiBR,EAAMI,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAC9D,EAAK3E,SAAS,CAAC2E,MAAOA,SAXlC,6CAgBQD,EAAMI,aAAaC,QAAQM,MAAMhF,KAAKwE,gBACtCH,EAAMI,aAAaK,SAASE,MAAMhF,KAAK6E,kBAjB/C,+BA2BQ,OACI,kBAACvF,EAAD,KACI,kBAAC,GAAD,CAAOR,KAAMkB,KAAKD,MAAMuE,MACpBhB,YAAatD,KAAKuE,uBAEjBvE,KAAKD,MAAMuE,MAAQtE,KAAKD,MAAMuE,MAAMW,QAAU,MAEnD,kBAACb,EAAqBpE,KAAK/C,YAlC3C,GAAqBiD,c,SCAVgF,G,QAJEb,EAAMc,OAAO,CAC1BC,QAAS,kDCWPC,G,2MAQFtF,MAAQ,CACJuF,YAAY,G,EAsBhBC,gBAAkB,WACd,EAAK5F,SAAS,CACV2F,YAAY,K,EAIpBE,sBAAwB,WACpB,EAAK7F,SAAS,CACV2F,YAAY,K,EAIpBG,wBAA0B,WACtB,EAAKxI,MAAMyI,iBACX,EAAKzI,MAAM0I,QAAQC,KAAK,c,mFA/BxB5F,KAAK/C,MAAM4I,sB,0CAGK3E,GAShB,OAPYF,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GACD,OAAOF,EAAYE,MAEtBK,QAAO,SAACqE,EAAKnE,GACV,OAAOmE,EAAMnE,IACf,GACO,I,+BAuBb,IAAMoE,EAAY,eACX/F,KAAK/C,MAAM+I,MAElB,IAAK,IAAIxE,KAAOuE,EACZA,EAAavE,GAAOuE,EAAavE,IAAO,EAG5C,IAAIyE,EAAe,KAIfnF,EAASd,KAAK/C,MAAMqH,MAAQ,2DAAsC,kBAAC,GAAD,MAmBtE,OAjBGtE,KAAK/C,MAAM+I,OACVlF,EACI,kBAACxB,EAAD,KACI,kBAAC,EAAD,CAAQ4B,YAAalB,KAAK/C,MAAM+I,OAChC,kBAAC,GAAD,CACIlD,gBAAiB9C,KAAK/C,MAAMiJ,kBAC5BnD,kBAAmB/C,KAAK/C,MAAMkJ,oBAC9B9D,SAAU0D,EACV/C,aAAchD,KAAKoG,oBAAoBpG,KAAK/C,MAAM+I,MAClD9C,QAASlD,KAAKuF,gBACd5C,MAAO3C,KAAK/C,MAAM0F,SAI9BsD,EAAe,kBAAC,GAAD,CAAc/E,YAAalB,KAAK/C,MAAM+I,KAAMjC,iBAAkB/D,KAAKwF,sBAAuBxB,kBAAmBhE,KAAKyF,wBAAyB9C,MAAO3C,KAAK/C,MAAM0F,SAI5K,kBAACrD,EAAD,KACI,kBAAC,GAAD,CAAOR,KAAMkB,KAAKD,MAAMuF,WAAYhC,YAAatD,KAAKwF,uBACjDS,GAEJnF,O,GApFWZ,aA2GbmG,gBAjBS,SAAAtG,GACpB,MAAO,CACHiG,KAAMjG,EAAMuG,cAAcpF,YAC1ByB,MAAO5C,EAAMuG,cAAcC,WAC3BjC,MAAOvE,EAAMuG,cAAchC,UAIR,SAAAkC,GACvB,MAAO,CACHN,kBAAmB,SAACO,GAAD,OAAaD,EC9G7B,CACHnG,KCLsB,iBDMtBqG,eD4G+DD,KAC/DN,oBAAqB,SAACM,GAAD,OAAaD,ECxG/B,CACHnG,KCXyB,oBDYzBqG,eDsGoED,KACpEZ,kBAAmB,kBAAMW,GCrFtB,SAAAA,GACHnC,GAAMsC,IAAI,qBACTC,MAAK,SAAA9B,GACF0B,EAhBD,CACHnG,KCjBuB,kBDkBvBa,YAc4B4D,EAAS+B,UAEpCC,OAAM,SAAAxC,GACHkC,EAZD,CACHnG,KCvBgC,oCFkHhCqF,eAAgB,kBAAMc,EG/ElB,CACHnG,KD/BoB,sBFiHdgG,CAA6ClC,GAAiBkB,GAAchB,K,oBIjG5E0C,GAnBS,SAAC9J,GACrB,OACI,yBAAKG,UAAWC,KAAQ2J,iBACpB,uDACA,yBAAKzJ,MAAO,CAAC0J,MAAO,OAAQC,OAAQ,SAChC,kBAAC,EAAD,CAAQhG,YAAajE,EAAMiE,eAE/B,kBAAC,GAAD,CACIyC,QAAQ,SACRnF,QAASvB,EAAMkK,mBAFnB,UAIA,kBAAC,GAAD,CACIxD,QAAQ,UACRnF,QAASvB,EAAMmK,mBAFnB,c,oBCuCGC,GAnDD,SAACpK,GACX,IAAIqK,EAAe,KACbC,EAAe,CAAClK,KAAQmK,cAM9B,OAJGvK,EAAMwK,SAAWxK,EAAMyK,gBAAkBzK,EAAM0K,SAC9CJ,EAAa3B,KAAKvI,KAAQuK,SAGtB3K,EAAM4K,aACV,IAAM,QACFP,EAAe,yCACXlK,UAAWmK,EAAa/H,KAAK,MACzBvC,EAAM6K,cAFC,CAGXC,MAAO9K,EAAM8K,MACbC,SAAU/K,EAAMgL,WACpB,MACJ,IAAM,WACFX,EAAe,4CACXlK,UAAWmK,EAAa/H,KAAK,MACzBvC,EAAM6K,cAFC,CAGXC,MAAO9K,EAAM8K,MACbC,SAAU/K,EAAMgL,WACpB,MACJ,IAAM,SACFX,EACI,4BACIlK,UAAWmK,EAAa/H,KAAK,KAC7BuI,MAAO9K,EAAM8K,MACbC,SAAU/K,EAAMgL,SACXhL,EAAM6K,cAAcI,QAAQ/G,KAAI,SAAAgH,GAAM,OACnC,4BAAQ3G,IAAK2G,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAK5B,MACJ,QACId,EAAe,yCACXlK,UAAWmK,EAAa/H,KAAK,MACzBvC,EAAM6K,cAFC,CAGXC,MAAO9K,EAAM8K,SAEzB,OACI,yBAAK3K,UAAWC,KAAQgL,OACpB,2BAAOjL,UAAWC,KAAQ4E,OAAQhF,EAAMiF,OACvCoF,I,oBCvCPgB,G,2MACFvI,MAAQ,CACJwI,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXzH,KAAM,OACNoI,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAO,CACHhB,YAAa,QACbC,cAAe,CACXzH,KAAM,OACNoI,YAAa,UAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXzH,KAAM,OACNoI,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,GAEfJ,OAAO,EACPjB,SAAS,GAEbsB,QAAS,CACLpB,YAAa,QACbC,cAAe,CACXzH,KAAM,OACNoI,YAAa,WAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbuB,MAAO,CACHrB,YAAa,QACbC,cAAe,CACXzH,KAAM,QACNoI,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbwB,eAAgB,CACZtB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,UACPW,WAAY,GACZE,OAAO,IAGfQ,aAAa,G,EAGjBC,aAAe,SAACC,GACZA,EAAMC,iBAEN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAK1J,MAAMwI,UACzCiB,EAASC,GAAyB,EAAK1J,MAAMwI,UAAUkB,GAAuB1B,MAGlF,IAAM2B,EAAQ,CACVxI,YAAa,EAAKjE,MAAM+I,KACxBrD,MAAO,EAAK1F,MAAM0F,MAClBgH,UAAWH,GAGf,EAAKvM,MAAM2M,cAAcF,I,EAI7BG,cAAgB,SAAC9B,EAAO+B,GACpB,IAAIC,GAAU,EAUd,OATGD,EAAMnB,WACLoB,EAA2B,KAAjBhC,EAAMiC,QAAiBD,GAElCD,EAAMf,YACLgB,EAAUhC,EAAMlG,QAAUiI,EAAMf,WAAagB,GAE9CD,EAAMd,YACLe,EAAUhC,EAAMlG,QAAUiI,EAAMd,WAAae,GAE1CA,G,EAGXE,oBAAsB,SAACX,EAAOY,GAC1B,IAAMC,EAAgB,eACf,EAAKpK,MAAMwI,WAGZ6B,EAAkB,eACjBD,EAAiBD,IAGxBE,EAAmBrC,MAAQuB,EAAMe,OAAOtC,MACxCqC,EAAmBxB,MAAQ,EAAKiB,cAAcO,EAAmBrC,MAAOqC,EAAmB1B,YAC3F0B,EAAmBzC,SAAU,EAC7BwC,EAAiBD,GAAmBE,EAEpC,IAAIhB,GAAc,EAClB,IAAI,IAAIc,KAAmBC,EACvBf,EAAce,EAAiBD,GAAiBtB,OAASQ,EAG7D,EAAKzJ,SAAS,CACV4I,UAAW4B,EACXf,YAAaA,K,wEAKX,IAAD,OACCkB,EAAoB,GAC1B,IAAK,IAAI9I,KAAOxB,KAAKD,MAAMwI,UACvB+B,EAAkB1E,KAAK,CACnB2E,GAAI/I,EACJgJ,OAAQxK,KAAKD,MAAMwI,UAAU/G,KAGrC,IAAIiJ,EACA,0BAAMC,SAAU1K,KAAKqJ,cAChBiB,EAAkBnJ,KAAI,SAAAwJ,GAAW,OAC9B,kBAAC,GAAD,CACInJ,IAAKmJ,EAAYJ,GACjB1C,YAAa8C,EAAYH,OAAO3C,YAChCC,cAAe6C,EAAYH,OAAO1C,cAClCC,MAAO4C,EAAYH,OAAOzC,MAC1BN,SAAUkD,EAAYH,OAAO5B,MAC7BlB,eAAgBiD,EAAYH,OAAO9B,WACnCf,QAASgD,EAAYH,OAAO7C,QAC5BM,QAAS,SAACqB,GAAD,OAAW,EAAKW,oBAAoBX,EAAOqB,EAAYJ,UAIxE,kBAAC,GAAD,CAAQ5G,QAAQ,UAAUtB,UAAWrC,KAAKD,MAAMqJ,aAAhD,UAMR,OAHGpJ,KAAK/C,MAAM2N,UACVH,EAAO,kBAAC,GAAD,OAGP,yBAAKrN,UAAWC,KAAQiL,aACpB,uDACCmC,O,GAhLSvK,aAoMXmG,gBAdS,SAAAtG,GACpB,MAAO,CACHiG,KAAMjG,EAAMuG,cAAcpF,YAC1ByB,MAAO5C,EAAMuG,cAAcC,WAC3BqE,QAAS7K,EAAM2J,MAAMkB,YAIF,SAACpE,GACxB,MAAO,CACHoD,cAAe,SAACD,GAAD,OAAenD,EHnLR,SAACmD,GAC3B,OAAO,SAAAnD,GACHA,EAPG,CACHnG,KDf6B,0BCsB7BgE,GAAMwG,KAAK,eAAgBlB,GACtB/C,MAAK,SAAA9B,GACF0B,EA1BqB,SAAC+D,EAAIZ,GACtC,MAAO,CACHtJ,KDC+B,0BCA/ByK,QAASP,EACTZ,UAAWA,GAsBMoB,CAAsBjG,EAAS+B,KAAK2B,KAAMmB,OAEtD7C,OAAM,SAAAxC,GACHkC,EArBoB,SAAClC,GACjC,MAAO,CACHjE,KDN4B,uBCO5BiE,MAAOA,GAkBU0G,CAAqB1G,QG2KC2G,CAAuBtB,QAIvDtD,CAA4ClC,GAAiBmE,GAAajE,KCzMnF6G,G,2MAEDC,yBAA2B,WACxB,EAAKlO,MAAM0I,QAAQyF,U,EAGtBC,yBAA2B,WACvB,EAAKpO,MAAM0I,QAAQ2F,QAAQ,2B,wEAI5B,IAAIC,EAAU,kBAAC,IAAD,CAAUxN,GAAG,MACrByN,EAAoBxL,KAAK/C,MAAMwO,UAAY,kBAAC,IAAD,CAAU1N,GAAG,MAAS,KAgBvE,OAfGiC,KAAK/C,MAAM+I,OACVuF,EACI,6BACKC,EACD,kBAAC,GAAD,CACAtK,YAAalB,KAAK/C,MAAM+I,KACxBmB,kBAAmBnH,KAAKmL,yBACxB/D,kBAAmBpH,KAAKqL,2BAExB,kBAAC,IAAD,CACAK,KAAM1L,KAAK/C,MAAM0O,MAAMD,KAAO,gBAC9BE,UAAWtD,OAIhBiD,M,GA5BQrL,aAwCRmG,gBARS,SAAAtG,GACpB,MAAO,CACHiG,KAAMjG,EAAMuG,cAAcpF,YAC1BuK,UAAW1L,EAAM2J,MAAM+B,aAKhBpF,CAAyB6E,I,oBChBzBxB,GA5BD,SAACzM,GACX,IAAMiE,EAAc,GACpB,IAAI,IAAIwF,KAAkBzJ,EAAMiE,YAC5BA,EAAY0E,KAAK,CACb4C,KAAM9B,EACNmF,OAAQ5O,EAAMiE,YAAYwF,KAIlC,IAAMoF,EAAmB5K,EAAYC,KAAI,SAAA4K,GACrC,OAAO,0BACHxO,MAAO,CACHuG,cAAe,aACfkI,QAAS,eACT9E,OAAQ,QACR+E,OAAQ,iBACRC,QAAS,QAEb1K,IAAKuK,EAAGvD,MAAOuD,EAAGvD,KARf,KAQuBuD,EAAGF,OAR1B,QAUX,OACI,yBAAKzO,UAAWC,KAAQ8O,OACpB,2CAAiBL,GACjB,qCAAU,uCAAaM,OAAOC,WAAWpP,EAAM0F,OAAOC,QAAQ,OChBpE0J,G,4LAGEtM,KAAK/C,MAAMsP,kB,+BAIX,IAAIC,EAAS,kBAAC,GAAD,MAUb,OATIxM,KAAK/C,MAAM2N,UACX4B,EAASxM,KAAK/C,MAAMuP,OAAOrL,KAAI,SAAAuI,GAAK,OAChC,kBAAC,GAAD,CACIlI,IAAKkI,EAAMa,GACXrJ,YAAawI,EAAMxI,YACnByB,MAAO+G,EAAM/G,YAKrB,6BACK6J,O,GAnBItM,aAsCNmG,gBAbS,SAAAtG,GACpB,MAAO,CACHyM,OAAQzM,EAAM2J,MAAM8C,OACpB5B,QAAS7K,EAAM2J,MAAMkB,YAIF,SAAApE,GACvB,MAAO,CACH+F,cAAe,kBAAM/F,GNqBlB,SAAAA,GACHA,EAPG,CACHnG,KDjD0B,uBCwD1BgE,GAAMsC,IAAI,gBACLC,MAAK,SAAA7B,GACF,IAAM0H,EAAgB,GACtB,IAAI,IAAIjL,KAAOuD,EAAI8B,KACf4F,EAAc7G,KAAd,eACOb,EAAI8B,KAAKrF,GADhB,CAEI+I,GAAG/I,KAGXgF,EA/BL,CACHnG,KDlC4B,uBCmC5BmM,OA6BoCC,OAC7B3F,OAAO,SAAA4F,GACNlG,EA1BL,CACHnG,KDxCyB,oBCyCzBiE,MAwBiCoI,cM9B1BrG,CAA6ClC,GAAiBmI,GAAQjI,KCrBtEsI,G,2MAjBb5M,MAAQ,G,wEAEN,OACA,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2L,KAAK,YAAYE,UAAWV,KACnC,kBAAC,IAAD,CAAOQ,KAAK,UAAUE,UAAWU,KACjC,kBAAC,IAAD,CAAOZ,KAAK,IAAI5N,OAAK,EAAC8N,UAAWvG,Y,GATzBnF,aCIE0M,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2D,aClBOqB,GAAe,SAACC,EAAWC,GACpC,OAAO,eACAD,EADP,GAEOC,ICALC,GAAe,CACjBjM,YAAa,KACbqF,WAAY,EACZjC,OAAO,GAGL8I,GAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGLC,GAAgB,SAAC1N,EAAO2N,GAC1B,IAAMC,EAAiB,gBAAKD,EAAOhH,eAAgB3G,EAAMmB,YAAYwM,EAAOhH,gBAAkB,GAEhFkH,EAAe,CACjB1M,YAFuB8L,GAAajN,EAAMmB,YAAayM,GAGvDpH,WAAYxG,EAAMwG,WAAa6G,GAAkBM,EAAOhH,iBAE5D,OAAOsG,GAAajN,EAAO6N,IAGjCC,GAAmB,SAAC9N,EAAO2N,GAC7B,IAAMI,EAAU,gBAAKJ,EAAOhH,eAAgB3G,EAAMmB,YAAYwM,EAAOhH,gBAAkB,GAEzEqH,EAAY,CACd7M,YAFgB8L,GAAajN,EAAMmB,YAAa4M,GAGhDvH,WAAYxG,EAAMwG,WAAa6G,GAAkBM,EAAOhH,iBAE5D,OAAOsG,GAAajN,EAAOgO,IAGjCC,GAAiB,SAACjO,EAAO2N,GAC3B,OAAOV,GAAajN,EAAO,CACvBmB,YAAa,CACTmM,MAAOK,EAAOxM,YAAYmM,MAC1BG,MAAOE,EAAOxM,YAAYsM,MAC1BF,OAAQI,EAAOxM,YAAYoM,OAC3BC,KAAMG,EAAOxM,YAAYqM,MAE7BhH,WAAY,EACZjC,OAAO,KAIT2J,GAAyB,SAAClO,EAAO2N,GACnC,OAAOV,GAAajN,EAAO,CAACuE,OAAO,KAaxB4J,GAVC,WAAmC,IAAlCnO,EAAiC,uDAAzBoN,GAAcO,EAAW,uCAC9C,OAAOA,EAAOrN,MACV,IXvDsB,iBWuDW,OAAOoN,GAAc1N,EAAO2N,GAC7D,IXvDyB,oBWuDW,OAAOG,GAAiB9N,EAAO2N,GACnE,IXvDuB,kBWuDW,OAAOM,GAAejO,EAAO2N,GAC/D,IXvDgC,2BWuDW,OAAOO,GAAuBlO,GACzE,QAAS,OAAOA,ICxDlBoN,GAAe,CACjBX,OAAQ,GACR5B,SAAS,EACTa,WAAW,GAGT0C,GAAe,SAACpO,EAAO2N,GACzB,OAAOV,GAAajN,EAAO,CAAC0L,WAAW,KAGrC2C,GAAsB,SAACrO,EAAO2N,GAChC,OAAOV,GAAajN,EAAO,CAAC6K,SAAS,KAGnCG,GAAwB,SAAChL,EAAO2N,GAClC,IAAMW,EAAWrB,GAAaU,EAAO/D,UAAU,CAACY,GAAImD,EAAO5C,UACnD,OAAOkC,GAAajN,EAAO,CACvB6K,SAAS,EACTa,WAAW,EACXe,OAAQzM,EAAMyM,OAAO5K,OAAOyM,MAItCC,GAAqB,SAACvO,EAAO2N,GAC/B,OAAOV,GAAajN,EAAO,CAAC6K,SAAS,KAGnC2D,GAAmB,SAACxO,EAAO2N,GAC7B,OAAOV,GAAajN,EAAO,CAAC6K,SAAS,KAGnC4D,GAAqB,SAACzO,EAAO2N,GAC/B,OAAOV,GAAajN,EAAO,CAACyM,OAAQkB,EAAOlB,OAAO5B,SAAS,KAGzD6D,GAAkB,SAAC1O,EAAO2N,GAC5B,OAAOV,GAAajN,EAAO,CAAC6K,SAAS,KAgB1BsD,GAbC,WAAmC,IAAlCnO,EAAiC,uDAAzBoN,GAAcO,EAAW,uCAC9C,OAAQA,EAAOrN,MACX,IZpCqB,gBYoCW,OAAO8N,GAAapO,GACpD,IZxC6B,wBYwCW,OAAOqO,GAAoBrO,GACnE,IZxC+B,0BYwCW,OAAOgL,GAAsBhL,EAAO2N,GAC9E,IZxC4B,uBYwCW,OAAOY,GAAmBvO,GACjE,IZtC0B,qBYsCW,OAAOwO,GAAiBxO,GAC7D,IZtC4B,uBYsCW,OAAOyO,GAAmBzO,EAAO2N,GACxE,IZtCyB,oBYsCW,OAAOe,GAAgB1O,GAC3D,QAAS,OAAOA,ICrClB2O,GAAmB7B,OAAO8B,sCAAwCC,IAElEC,GAAcC,YAAgB,CAChCxI,cAAeyI,GACfrF,MAAOsF,KAGLC,GAAQC,YACVL,GACAH,GACIS,YAAgBC,OAGlBC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAMZK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SJ+FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhJ,MAAK,SAAAiJ,GACjCA,EAAaC,kB","file":"static/js/main.c71ca9fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"_16czhM3SJjm0N-dLAavfix\",\"BreadTop\":\"_1F9cDh5mfiR8BvKxKnGMeh\",\"Seeds1\":\"_1KqDNkmDd04k5rFdowEZGj\",\"Seeds2\":\"_1j0RgZwbJ6trcJooqPdtwH\",\"Meat\":\"_1kFCFMz2-iIPZAjvPt4MsC\",\"Cheese\":\"_3JVcnSJn7GorqF2q39ZuR2\",\"Salad\":\"_142r8ItvsnhGp1RSw-_Dbt\",\"Bacon\":\"_3LSemMccNpDOc-pbjPJs-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3pLYCt_XGv-qW86lAaB4Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","const aux = (props) => props.children;\n \nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css'\nconst logo = (props) => {\n    return ( \n        <div className={classes.Logo} style={{height: props.height}}>\n            <img src={burgerLogo} alt=\"MyBurger\" />\n        </div>\n     );\n}\n \nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css'\nconst navigationItem = (props) => {\n    return ( \n        <li className={classes.NavigationItem}>\n            <NavLink\n                exact={props.exact}\n                to={props.link}\n                activeClassName={classes.active}\n            >{props.children}</NavLink>\n        </li>\n     );\n}\n \nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\nconst navigationItems = () => {\n    return ( \n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\n        </ul>\n     );\n}\n \nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css'\n\nconst drawerToggle = (props) => {\n    return ( \n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n     );\n}\n \nexport default drawerToggle;","import React from 'react';\nimport Logo from '../../Logo/Logo';\n\nimport classes from './Toolbar.css'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => {\n    return ( \n        <header className={classes.Toolbar}>\n            <DrawerToggle clicked={props.drawerToggleClicked} />\n            <div className={classes.Logo}>\n                <Logo/>\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems/>\n            </nav>\n        </header>\n    );\n}\n \nexport default toolbar; ","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = (props )=> (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport classes from './SideDrawer.css';\n\nconst sideDrawer = (props) => {\n\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open];\n\n    }\n    return ( \n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(\" \")}>\n            <div className={classes.Logo}>\n                <Logo/>\n            </div>\n            <nav><NavigationItems/></nav>\n        </div>\n        </Aux>\n        \n     );\n}\n \nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nimport classes from './Layout.css';\nclass Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showSideDrawer: false\n         }\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({\n            showSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () =>{\n\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {  \n        return ( \n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n         );\n    }\n}\n \nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredients.css';\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n            switch(this.props.type) {\n                case ('bread-bottom'):\n                    ingredient = <div className={classes.BreadBottom}></div>;\n                    break;\n                case ('bread-top'):\n                    ingredient = (\n                        <div className={classes.BreadTop}>\n                            <div className={classes.Seeds1}></div>\n                            <div className={classes.Seeds2}></div>\n                        </div>\n                    );\n                    break;\n                case ('meat'):\n                    ingredient = <div className={classes.Meat}></div>;\n                    break;\n                case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>;\n                    break;\n                case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>;\n                    break;\n                case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>;\n                    break;\n                default:\n                    ingredient = null;\n            }\n\n            return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n \nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css'\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }    \n    return ( \n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n     );\n}\n \nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css'\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n)\n \nexport default buildControl;","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.css'\n\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)} \n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button \n            disabled={!props.purchaseable} \n            className={classes.OrderButton}\n            onClick={props.ordered}\n            >ORDER NOW</button>\n    </div>\n)\n \nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component{\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render(){\n        return ( \n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </Aux>\n         );\n    }\n    \n}\n \nexport default Modal;","import React from 'react';\nimport classes from './Button.css';\nconst button = (props) => {\n    return ( \n    <button disabled={props.disabled} className={[classes.Button, classes[props.btnType]].join(\" \")} onClick={props.clicked}>{props.children}</button>\n    );\n}\n \nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component{\n    \n    render(){\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(igKey => {\n            return( \n            <li key={igKey}>\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\n            </li>);\n        })\n        return ( \n            <Aux>\n                <h3>\n                    Your Order\n                </h3>\n                <p>A delicious burger with the following ingredients: </p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux> \n        );\n    }\n    \n    \n}\n \nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.css'\nconst spinner = () => {\n    return ( \n        <div className={classes.Loader}>Loading...</div>\n     );\n}\n \nexport default spinner;","import React, {Component} from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component{\n        state = {\n            error: null\n        }\n\n        componentWillMount(){\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null})\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error}) \n            })\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({\n                error: null\n            })\n        }\n\n        render(){ \n            return (\n                <Aux>\n                    <Modal show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}\n                    >\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-the-burger-c00d5.firebaseio.com'\n})\n\nexport default instance;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders'\n\n\nclass BurgerBuilder extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n\n    //     }\n    // }\n    \n    state = {\n        purchasing: false,\n\n    }\n\n    componentDidMount(){\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState(ingredients){\n\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el\n            },0)\n        return sum > 0;\n    }\n\n    \n\n    purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n        })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({\n            purchasing: false\n        })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n    \n    render() { \n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        let orderSummary = null;\n\n        \n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n        if(this.props.ings){\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price}\n                    />\n                </Aux>\n            )\n            orderSummary = <OrderSummary ingredients={this.props.ings} purchaseCanceled={this.purchaseCancelHandler} purchaseContinued={this.purchaseContinueHandler} price={this.props.price} />\n        }\n\n        return ( \n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n         );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n        .then(response => {\n            dispatch(setIngredients(response.data))\n        })\n        .catch(error => {\n            dispatch(fetchIngredientsFailed())\n        })\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFailed = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFailed(error))\n            })\n    }\n}\n\nexport const purchaseInit = () => {\n     return {\n         type: actionTypes.PURCHASE_INIT\n     }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id:key\n                    })\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders))\n            }).catch( err => {\n                dispatch(fetchOrdersFail(err))\n            })\n    }\n}","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return ( \n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}\n                >CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}\n                >CONTINUE</Button>\n        </div>\n     );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType){\n        case ('input'):\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n            break;\n        case ('select'):\n            inputElement = (\n                <select \n                    className={inputClasses.join(' ')} \n                    value={props.value}\n                    onChange={props.changed}>\n                        {props.elementConfig.options.map(option => (\n                            <option key={option.value} value={option.value}>\n                                {option.displayValue}\n                            </option>\n                        ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} />\n    }\n    return ( \n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n     );\n}\n \nexport default input;","import React, { Component } from 'react';\nimport axios from '../../../axios-orders';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nimport classes from './ContactData.css'\nclass ContactData extends Component {\n    state = { \n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}   \n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n        },\n        formIsValid: false\n     }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(order)\n        \n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) =>{\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        })\n\n    }\n\n    render() { \n        const formElementsArray = [];\n        for (let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                        />\n                ))}\n                \n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if(this.props.loading){\n            form = <Spinner/>\n        }\n        return ( \n            <div className={classes.ContactData}>\n                <h4>Enter your Contact data</h4>\n                {form}\n            </div>\n         );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect} from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n\n     checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n     }\n\n     checkoutContinuedHandler = () => {\n         this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() { \n        let summary = <Redirect to=\"/\" />\n        const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n        if(this.props.ings){\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                    ingredients={this.props.ings} \n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler}\n                    />\n                    <Route \n                    path={this.props.match.path + '/contact-data'} \n                    component={ContactData}/>\n                </div>\n            )\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n \nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.css'\nconst order = (props) =>{ \n    const ingredients = [];\n    for(let ingredientName in props.ingredients){\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px '\n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../axios-orders'\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount(){\n        this.props.onFetchOrders();\n    }\n    \n    render() { \n        let orders = <Spinner />;\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price}\n                />\n            ))\n        }\n        return ( \n            <div>\n                {orders}     \n            </div> \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div> \n    \n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = {[action.ingredientName]:state.ingredients[action.ingredientName] + 1}\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n            return updateObject(state, updatedState);\n}\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = {[action.ingredientName]:state.ingredients[action.ingredientName] - 1}\n            const updatedIngs = updateObject(state.ingredients, updatedIng)\n            const updatedSt = {\n                ingredients: updatedIngs,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n            return updateObject(state, updatedSt);\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, {error: true})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action); \n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {purchased: false})\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData,{id: action.orderId}); \n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            });\n}\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, {orders: action.orders,loading: false})\n}\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);    \n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);   \n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n})\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    ));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}